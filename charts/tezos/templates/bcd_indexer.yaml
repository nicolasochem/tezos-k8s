{{- if eq (include "tezos.indexer" .) "bcd" }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.bcd_indexer_statefulset.name }}
  namespace: {{ .Release.Namespace }}
spec:
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: {{ .Values.bcd_indexer_statefulset.name }}
  serviceName: ""
  template:
    metadata:
      labels:
        app: {{ .Values.bcd_indexer_statefulset.name }}
        appType: tezos
    spec:
      securityContext:
        fsGroup: 1000
      containers:
        - image: bakingbad/bcdhub-api:3.5
          name: api
          ports:
            - containerPort: 14000
              name: bcd
          envFrom:
          - configMapRef:
              name: bcd-env
          - configMapRef:
              name: db-creds
        - image: bakingbad/bcdhub-indexer:3.5
          name: indexer
          envFrom:
          - configMapRef:
              name: bcd-env
        - image: bakingbad/bcdhub-metrics:3.5
          name: metrics
          envFrom:
          - configMapRef:
              name: bcd-env
          - configMapRef:
              name: db-creds
        - image: postgres:alpine
          name: db
          volumeMounts:
            - mountPath: /var/lib/postgresql/
              name: indexer-db
          envFrom:
          - configMapRef:
              name: db-creds
        - image: rabbitmq:latest
          name: mq
          volumeMounts:
            - mountPath: /var/lib/rabbitmq/mnesia
              name: mq-data
          env:
            - name: RABBITMQ_DEFAULT_USER
              value: guest
            - name: RABBITMQ_DEFAULT_PASS
              value: guest
        - image: bakingbad/bcdhub-elastic:3.5
          name: elastic
          volumeMounts:
            - mountPath: /usr/share/elasticsearch/data
              name: esdata
          env:
            - name: "bootstrap.memory_lock"
              value: "true"
            - name: "discovery.type"
              value: single-node
            - name: ES_JAVA_OPTS
              value: "-Xms256m -Xmx256m"
  volumeClaimTemplates:
    - metadata:
        name: esdata
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "300Gi"
    - metadata:
        name: mq-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "5Gi"
    - metadata:
        name: indexer-db
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "300Gi"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: bcd-config
data:
  bcd_config.yml: |-
    storage:
      uri:
        - http://localhost:9200
      timeout: 10
    rabbitmq:
      uri: "amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@localhost:5672/"
      timeout: 10
    db:
      conn_string: "host=127.0.0.1 port=5432 user=${POSTGRES_USER} dbname=${POSTGRES_DB} password=${POSTGRES_PASSWORD} sslmode=disable"
      timeout: 10
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: bcd-env
data:
  BCD_ENV: sandbox
  GIN_MODE: debug
  ELASTIC_HOSTNAME: localhost
  RABBITMQ_HOSTNAME: localhost
  DB_HOSTNAME: 127.0.0.1
  RABBITMQ_DEFAULT_USER: guest
  RABBITMQ_DEFAULT_PASS: guest
  SANDBOX_NODE_URI: "http://{{ .Values.index.target }}:8732"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-creds
data:
  POSTGRES_USER: root
  POSTGRES_PASSWORD: root
  POSTGRES_DB: bcd
{{- end }}
